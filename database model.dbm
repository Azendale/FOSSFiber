<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.9.2-beta1" last-position="0,0" last-zoom="1" max-obj-count="109"
	 default-owner="postgres">
<database name="fossfiber" is-template="false" allow-conns="true">
	<comment><![CDATA[Database Schema and format Licensed under the AGPL v 3.0, available at https://www.gnu.org/licenses/agpl-3.0-standalone.html . Note that for the purposes of this project, use over a network by a employer's employees constitues distribution and causes the requirements for provision of source code for any modifications to apply. The author of this project specifically requires that the distribution of changed source be also made available to the public at large, minus any keys, passwords, or other access credentials that may be embedded in the source code. Making source code available in a publicly accessible github repository qualifies to meet this requirement.]]></comment>
</database>

<schema name="public" layer="0" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<extension name="postgis">
</extension>

<table name="pole_attachment" layer="0" collapse-mode="1" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="500" y="300"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="height_meters">
		<type name="real" length="0"/>
	</column>
	<column name="utility_pole_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="f_permitting_requested" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="f_permitting_granted" not-null="true" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="f_built" default-value="True">
		<type name="bool" length="0"/>
	</column>
	<constraint name="pole_attachement_id_pk" type="pk-constr" table="public.pole_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_line" layer="0" collapse-mode="1" max-obj-count="1">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="40" y="40"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<constraint name="strand_line_id_pk" type="pk-constr" table="public.strand_line">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_attachment" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="480" y="80"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="strand_line_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="strand_line_squence">
		<type name="real" length="0"/>
		<comment><![CDATA[Used to sort attachments into their order that they occur along the strand]]></comment>
	</column>
	<constraint name="strand_attachment_id_pk" type="pk-constr" table="public.strand_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_to_strand_attachment" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Should we denormalize and cache a point of where this strand attachment ends up being on the parent strand?]]></comment>
	<position x="1140" y="20"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="percentage_along_segment" not-null="true">
		<type name="real" length="0"/>
		<comment><![CDATA[Value between 0 and 1. Percentage along segment from strand_attachment_a_id to strand_attachment_b_id]]></comment>
	</column>
	<column name="segment_strand_attachment_a_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="segment_strand_attachment_b_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="strand_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="strand_to_strand_attachment_id_pk" type="pk-constr" table="public.strand_to_strand_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="percentage_along_segment_must_be_between_0_and_1" type="ck-constr" table="public.strand_to_strand_attachment">
			<expression><![CDATA[percentage_along_segment >= 0 and percentage_along_segment <= 1]]></expression>
	</constraint>
</table>

<table name="strand_guy_wire" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="40" y="220"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="sidewalk_standoff_pipe" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="pole_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="azimuth_from_pole">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="azimuth_is_degrees" type="ck-constr" table="public.strand_guy_wire">
			<expression><![CDATA[azimuth_from_pole >= 0 and azimuth_from_pole < 360]]></expression>
	</constraint>
	<constraint name="strand_guy_wire_pk" type="pk-constr" table="public.strand_guy_wire">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_enclosure" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1660" y="1400"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="longlat">
		<type name="geography" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<column name="manufacturer_name">
		<type name="text" length="0"/>
	</column>
	<column name="enclosure_model">
		<type name="text" length="0"/>
	</column>
	<constraint name="fiber_enclosure_id" type="pk-constr" table="public.fiber_enclosure">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter" layer="0" collapse-mode="1" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2560" y="1401"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="inputs_count" not-null="true" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="outputs_count">
		<type name="smallint" length="0"/>
	</column>
	<column name="splitter_type_id" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="splitter_style_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="containing_fiber_enclosure">
		<type name="integer" length="0"/>
	</column>
	<constraint name="optical_splitter_id_pk" type="pk-constr" table="public.optical_splitter">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="enclosure_port" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Inherited fiber_connection.fiber_end_a_id is considered the in side of the enclosure, inherited fiber_connection.fiber_end_b_id is considered the out side of the enclosure. This is by convention and not enforced by checks.]]></comment>
	<position x="2160" y="1680"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="fiber_enclosure_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="port_label">
		<type name="text" length="0"/>
	</column>
	<column name="fiber_connection_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="enclosure_port_id_pk" type="pk-constr" table="public.enclosure_port">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="enclosure_port_uniquely_owns_inherited_fiber_connection" type="uq-constr" table="public.enclosure_port">
		<columns names="fiber_connection_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_connector_types" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3997.14" y="1965.71"/>
	<column name="id" not-null="true">
		<type name="smallserial" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="gender" default-value="'M'">
		<type name="char" length="0"/>
	</column>
	<constraint name="optical_connector_types_pk" type="pk-constr" table="public.optical_connector_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•name•gender⸣
•SC/APC•M⸣
•SC/APC•F⸣
•SC/UPC•M⸣
•SC/UPC•F⸣
•LC/UPC•M⸣
•LC/UPC•F⸣
•LC/APC•M⸣
•LC/APC•F⸣
•fusion splice•F⸣
•mechanical splice•F⸣
•OptiTap SC/APC Port•F⸣
•OptiTap SC/APC Plug•M]]>
	</initial-data>
</table>

<table name="fiber_cable" layer="0" collapse-mode="1" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1220" y="1020"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="cable_start_length_measure">
		<type name="real" length="0"/>
	</column>
	<column name="cable_end_length_measure">
		<type name="real" length="0"/>
	</column>
	<column name="length_units" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="fiber_groups_depth" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="f_armored" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="f_outdoor" default-value="true">
		<type name="bool" length="0"/>
	</column>
	<column name="fiber_groups_top_level_count" default-value="1">
		<type name="smallint" length="0"/>
		<comment><![CDATA[Number/count of the fiber groups at the top level of the cable. For example, on a 48 count loose tube cable, this would be 4 for 4 buffer tubes. This is the same idea as the "subgroup_count" column in fiber_groups table, but it tells how many for the top level, since each level below the top would be stored in the "parent" fiber_group row.]]></comment>
	</column>
	<constraint name="fiber_cable_id_pk" type="pk-constr" table="public.fiber_cable">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="length_units" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="60" y="1780"/>
	<column name="id" not-null="true">
		<type name="smallserial" length="0"/>
	</column>
	<column name="unit_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="unit_shortsymbol" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="length_units_id_pk" type="pk-constr" table="public.length_units">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•unit_name•unit_shortsymbol⸣
1•feet•ft⸣
2•meters•m]]>
	</initial-data>
</table>

<table name="fiber_group_types" layer="0" collapse-mode="1" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="140" y="1220"/>
	<column name="id" not-null="true">
		<type name="smallserial" length="0"/>
	</column>
	<column name="shortname" default-value="'buffer tube'">
		<type name="text" length="15"/>
	</column>
	<constraint name="fiber_group_types_pk" type="pk-constr" table="public.fiber_group_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_group" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Describes the structure/fiber groupings in a cable. A massive cable with ]]></comment>
	<position x="460" y="1180"/>
	<column name="id" not-null="true">
		<type name="smallserial" length="0"/>
	</column>
	<column name="subgroup_count" default-value="12">
		<type name="smallint" length="0"/>
		<comment><![CDATA[Number of subgroups or fibers in each of the groups this row represents. For example, 12 for 12 fibers in a buffer tube. Or, in a 96 count ribbon cable with a central tube, with this row being for the central tube, 8 for the 8 ribbons inside the central tube.]]></comment>
	</column>
	<column name="group_type_id" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="level" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="fiber_cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_group_pk" type="pk-constr" table="public.fiber_group">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber" layer="0" collapse-mode="1" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[TODO: should this be one fiber for the whole length of the cable, or multiple rows in this table for when midspans happen in a cable?]]></comment>
	<position x="2320" y="760"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_pk" type="pk-constr" table="public.fiber">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_identifier_index" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Used to store the information about which fiber in a cable. Not columns on the fiber table because of the potential for varying numbers/levels of grouping in a cable. For example, on the huge fiber count cable, you could have multiple "buffer tubes" with multiple ribbons inside, and inside each ribbon multiple fibers.]]></comment>
	<position x="2920" y="800"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="group_index" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="group_level" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="fiber_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_identifier_index_pk" type="pk-constr" table="public.fiber_identifier_index">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_slack_coil" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1760" y="1040"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="fiber_cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="in_meterage">
		<type name="real" length="0"/>
		<comment><![CDATA[length in meters of where the slack coil is along the cable. Where the slack loop "starts" when going down the cable in ascending measurement numbers.]]></comment>
	</column>
	<column name="latlong">
		<type name="geography" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<column name="out_meterage">
		<type name="real" length="0"/>
	</column>
	<constraint name="fiber_cable_slack_coil_pk" type="pk-constr" table="public.fiber_cable_slack_coil">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter_types" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2240" y="1280"/>
	<column name="id" not-null="true">
		<type name="smallserial" length="0"/>
	</column>
	<column name="type_label" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="symmetric_outputs" not-null="true" default-value="true">
		<type name="bool" length="0"/>
		<comment><![CDATA[Whether this splitter has a (theoretical - not the factory test numbers) even output power for the outputs.]]></comment>
	</column>
	<constraint name="optical_splitter_types_pk" type="pk-constr" table="public.optical_splitter_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•type_label•symmetric_outputs⸣
1•PLC•true⸣
2•FBT, symmetric•true⸣
3•FBT, asymmetric•false]]>
	</initial-data>
</table>

<table name="optical_splitter_styles" layer="0" collapse-mode="1" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2240" y="1380"/>
	<column name="id" not-null="true">
		<type name="smallserial" length="0"/>
	</column>
	<column name="style_label" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="optical_splitter_styles_pk" type="pk-constr" table="public.optical_splitter_styles">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•style_label⸣
1•steel tube⸣
2•ABS case⸣
3•LGX box⸣
4•Rack mount box]]>
	</initial-data>
</table>

<table name="optical_splitter_output" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3000" y="1300"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="power_drop" default-value="NULL">
		<type name="real" length="0"/>
		<comment><![CDATA[NULL for theoretically symmetric output (calulate drop from the related  optical_splitter.outputs_count). Used for uneven input/output splits. Note that this is the theoretical drop that you would get modeling (for multi in x multi out splitters) the splitter as 2 back to back single input splitters with inputs tied together).]]></comment>
	</column>
	<column name="output_label">
		<type name="text" length="0"/>
	</column>
	<column name="optical_splitter_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="optical_splitter_output_pk" type="pk-constr" table="public.optical_splitter_output">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="optical_splitter_output_uniquely_owns_inherited_fiber_end" type="uq-constr" table="public.optical_splitter_output">
		<columns names="fiber_end_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter_input" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3000" y="1480"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="power_drop" default-value="NULL">
		<type name="real" length="0"/>
		<comment><![CDATA[NULL for theoretically symmetric input (calulate drop from the related  optical_splitter.inputs_count). Used for uneven input/output splits. Note that this is the theoretical drop that you would get modeling (for multi in x multi out splitters) the splitter as 2 back to back single input splitters with inputs tied together).]]></comment>
	</column>
	<column name="input_label">
		<type name="text" length="0"/>
	</column>
	<column name="optical_splitter_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="optical_splitter_input_pk" type="pk-constr" table="public.optical_splitter_input">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="optical_splitter_input_uniquely_owns_inherited_fiber_end" type="uq-constr" table="public.optical_splitter_input">
		<columns names="fiber_end_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_end" layer="0" collapse-mode="1" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3540" y="1200"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="optical_connector_type_id">
		<type name="smallint" length="0"/>
		<comment><![CDATA[If the end of this fiber does not have factory installed connector, this column is NULL.]]></comment>
	</column>
	<constraint name="fiber_end_pk" type="pk-constr" table="public.fiber_end">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="cable_fiber_end" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2940" y="1040"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="fiber_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="start_end" not-null="true">
		<type name="bool" length="0"/>
		<comment><![CDATA[If true, then going from the end down the fiber, cable meterage will be ascending. If false, it will be decending.]]></comment>
	</column>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="meterage" not-null="true">
		<type name="real" length="0"/>
		<comment><![CDATA[Where this end of the fiber falls, in measurement units of meters on the cable jacket.]]></comment>
	</column>
	<constraint name="cable_fiber_end?_pk" type="pk-constr" table="public.cable_fiber_end">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="cable_fiber_end_uniquely_owns_inherited_fiber_end" type="uq-constr" table="public.cable_fiber_end">
		<columns names="fiber_end_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="utility_pole" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="20" y="420"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="pole_owner">
		<type name="text" length="0"/>
	</column>
	<column name="pole_owner_primary_label">
		<type name="text" length="0"/>
	</column>
	<column name="latlong" not-null="true">
		<type name="geometry" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<constraint name="utility_pole_id_pk" type="pk-constr" table="public.utility_pole">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_connection" layer="0" collapse-mode="1" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="4020" y="1460"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="connected_fiber_end_a_id">
		<type name="integer" length="0"/>
	</column>
	<column name="connected_fiber_end_b_id">
		<type name="integer" length="0"/>
	</column>
	<column name="a_optical_connector_type_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="b_optical_connector_type_id">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="fiber_end_cant_connect_to_itself" type="ck-constr" table="public.fiber_connection">
			<expression><![CDATA[connected_fiber_end_a_id <> connected_fiber_end_b_id]]></expression>
	</constraint>
	<constraint name="fiber_connection_pk" type="pk-constr" table="public.fiber_connection">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<view name="v_fiber_connection_sym" layer="0" collapse-mode="2" max-obj-count="1">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[View to show fiber connections in a way that it doesn't matter what order you put the fibers in.]]></comment>
	<position x="4020" y="1360"/>
	<reference>
		<expression><![CDATA[select fiber_connection.id, fiber_connection.connected_fiber_end_a_id, fiber_connection.connected_fiber_end_b_id from fiber_connection
union all
select fiber_connection.id, fiber_connection.connected_fiber_end_b_id, fiber_connection.connected_fiber_end_a_id from fiber_connection]]></expression>
	<column name="id">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_a_id">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_b_id">
		<type name="integer" length="0"/>
	</column>
		<reftable name="public.fiber_connection"/>
	</reference>
</view>

<relationship name="rel_v_fiber_splice_sym_fiber_splice" type="reltv" layer="0"
	 src-table="public.v_fiber_connection_sym"
	 dst-table="public.fiber_connection"
	 src-required="false" dst-required="false"/>

<table name="fiber_splice" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="4002.86" y="1042.86"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="fiber_connection_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fusion" default-value="true">
		<type name="bool" length="0"/>
	</column>
	<column name="estimated_loss" default-value="0.3">
		<type name="real" length="0"/>
	</column>
	<constraint name="fiber_splice_pk" type="pk-constr" table="public.fiber_splice">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="fiber_plice_uniquely_owns_inherited_fiber_connection" type="uq-constr" table="public.fiber_splice">
		<columns names="fiber_connection_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="underground_vault" layer="0" collapse-mode="1" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="80" y="1380"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="latlong" not-null="true">
		<type name="geometry" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<column name="depth">
		<type name="real" length="0"/>
	</column>
	<column name="width">
		<type name="real" length="0"/>
	</column>
	<column name="length">
		<type name="real" length="0"/>
	</column>
	<column name="length_units_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="manufacturer_name">
		<type name="text" length="0"/>
	</column>
	<column name="vault_model">
		<type name="text" length="0"/>
	</column>
	<constraint name="underground_vault_pk" type="pk-constr" table="public.underground_vault">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="underground_conduit" layer="0" collapse-mode="1" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="560" y="1560"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="length">
		<type name="real" length="0"/>
	</column>
	<column name="start_underground_vault_entry_id">
		<type name="integer" length="0"/>
	</column>
	<column name="end_underground_vault_entry_id">
		<type name="integer" length="0"/>
	</column>
	<column name="conduit_route">
		<type name="geometry" length="0" spatial-type="LINESTRING" variation="0" srid="4326"/>
	</column>
	<column name="conduit_type_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="underground_conduit_pk" type="pk-constr" table="public.underground_conduit">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_slack_coil_located_in_underground_vault" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1060" y="1260"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="underground_vault_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_cable_slack_loop_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_cable_slack_coil_located_in_underground_vault_pk" type="pk-constr" table="public.fiber_cable_slack_coil_located_in_underground_vault">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_enclosure_located_in_underground_vault" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1060" y="1400"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="fiber_enclosure_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="underground_vault_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_enclosure_located_in_underground_vault_pk" type="pk-constr" table="public.fiber_enclosure_located_in_underground_vault">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_end_meta_instance_inheritance" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Tracks specialization/inheritance of fiber_ends and what tables should be checked/joined for references. Putting an entry in this table means that a inner join between fiber_end.id and {inheriting_table_name}.{inheriting_table_fk_column_name) should return a result.]]></comment>
	<position x="3540" y="1280"/>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="inheriting_table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="inheriting_table_fk_column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="fiber_end_meta_instance_inheritance_pk" type="pk-constr" table="public.fiber_end_meta_instance_inheritance">
		<columns names="fiber_end_id,inheriting_table_name,inheriting_table_fk_column_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_connection_meta_instance_inheritance" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Tracks specialization/inheritance of fiber_connections and what tables should be checked/joined for references. Putting an entry in this table means that a inner join between fiber_connection.id and {inheriting_table_name}.{inheriting_table_fk_column_name) should return a result.]]></comment>
	<position x="4027" y="1596"/>
	<column name="fiber_connection_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="inheriting_table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="inheriting_table_fk_column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="fiber_connection_meta_instance_inheritance_pk" type="pk-constr" table="public.fiber_connection_meta_instance_inheritance">
		<columns names="fiber_connection_id,inheriting_table_name,inheriting_table_fk_column_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_located_in_fiber_enclosure" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2280" y="940"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="fiber_cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_enclosure_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="cable_entry_in_meterage">
		<type name="real" length="0"/>
		<comment><![CDATA[The lower of the (two potential) meterage measurements where a fiber_cable enters or exits a fiber_enclosure. NULL means that the fiber_cable starts (going along the cable in ascending meterage)  in the fiber_enclosure.]]></comment>
	</column>
	<column name="cable_entry_out_meterage">
		<type name="real" length="0"/>
		<comment><![CDATA[The higher of the (two potential) meterage measurements where a fiber_cable enters or exits a fiber_enclosure. NULL means that the fiber_cable ends (going along the cable in ascending meterage) in the fiber_enclosure.]]></comment>
	</column>
	<column name="in_tape_marking">
		<type name="text" length="0"/>
		<comment><![CDATA[Tape colors/pattern for "in" cable entry.]]></comment>
	</column>
	<column name="out_tape_marking">
		<type name="text" length="0"/>
		<comment><![CDATA[Tape colors/pattern for "out" cable entry.]]></comment>
	</column>
	<constraint name="fiber_cable_located_in_fiber_enclosure_pk" type="pk-constr" table="public.fiber_cable_located_in_fiber_enclosure">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="in_out_meterage_is_correct_direction" type="ck-constr" table="public.fiber_cable_located_in_fiber_enclosure">
			<expression><![CDATA[cable_entry_in_meterage is NULL or cable_entry_out_meterage is NULL or cable_entry_in_meterage <= cable_entry_out_meterage]]></expression>
	</constraint>
</table>

<table name="fiber_cable_strand_attachment" layer="0" collapse-mode="1" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1319" y="541"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="segment_percentage" default-value=".5">
		<type name="real" length="0"/>
		<comment><![CDATA[0 < segment_percentage < 1]]></comment>
	</column>
	<column name="strand_attachment_a_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="strand_attachment_b_id">
		<type name="integer" length="0"/>
		<comment><![CDATA[NULL (and segment_percentage NULL) when attachment is just one point.]]></comment>
	</column>
	<column name="fiber_cable_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_cable_strand_attachment_pk" type="pk-constr" table="public.fiber_cable_strand_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="segment_percentage_null_or_in_range" type="ck-constr" table="public.fiber_cable_strand_attachment">
			<expression><![CDATA[segment_percentage is NULL or (segment_percentage >= 0 and segment_percentage <= 1)]]></expression>
	</constraint>
	<constraint name="segment_percentage_null_when_strand_attachment_b_is_null" type="ck-constr" table="public.fiber_cable_strand_attachment">
			<expression><![CDATA[(strand_attachment_b_id IS NULL and segment_percentage is NULL) or (strand_attachment_b_id IS NOT NULL and segment_percentage IS NOT NULL)]]></expression>
	</constraint>
</table>

<table name="strand_pole_attachment" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1220" y="240"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="pole_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="strand_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="strand_pole_attachment_pk" type="pk-constr" table="public.strand_pole_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="pole_attachment_meta_instance_inheritance" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="499" y="456"/>
	<column name="pole_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="inheriting_table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="inheriting_table_fk_column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="pole_attechment_meta_instance_inheritance_pk" type="pk-constr" table="public.pole_attachment_meta_instance_inheritance">
		<columns names="pole_attachment_id,inheriting_table_name,inheriting_table_fk_column_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_attachment_meta_instance_inheritance" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="480" y="180"/>
	<column name="strand_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="inheriting_table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="inheriting_table_fk_column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="strand_attachment_meta_object_inheritance_pk" type="pk-constr" table="public.strand_attachment_meta_instance_inheritance">
		<columns names="strand_attachment_id,inheriting_table_name,inheriting_table_fk_column_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_building_attachment" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1320" y="880"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="building_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="strand_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="strand_building_attachment_pk" type="pk-constr" table="public.strand_building_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_attachment" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="480" y="680"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_cable_meterage" not-null="true">
		<type name="real" length="0"/>
	</column>
	<column name="fiber_cable_meterage_is_guess" not-null="true">
		<type name="bool" length="0"/>
	</column>
	<column name="fiber_cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_cable_attachment_pk" type="pk-constr" table="public.fiber_cable_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_attachment_meta_instance_inheritance" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="480" y="800"/>
	<column name="fiber_cable_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="inheriting_table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="inheriting_table_fk_column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="fiber_cable_attachment_meta_instance_inheritance_pk" type="pk-constr" table="public.fiber_cable_attachment_meta_instance_inheritance">
		<columns names="fiber_cable_attachment_id,inheriting_table_name,inheriting_table_fk_column_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_pole_attachment" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1320" y="400"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="fiber_cable_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="pole_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_cable_pole_attachment_pk" type="pk-constr" table="public.fiber_cable_pole_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_building_attachment" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1320" y="721"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="building_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_cable_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_cable_building_attachment_pk" type="pk-constr" table="public.fiber_cable_building_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="building" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="40" y="600"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="address_number">
		<type name="text" length="0"/>
	</column>
	<column name="street">
		<type name="text" length="0"/>
	</column>
	<column name="city">
		<type name="text" length="0"/>
	</column>
	<column name="state">
		<type name="text" length="0"/>
	</column>
	<column name="zip">
		<type name="text" length="0"/>
	</column>
	<column name="suite_apt">
		<type name="text" length="0"/>
	</column>
	<constraint name="building_pk" type="pk-constr" table="public.building">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="building_attachment" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="500" y="940"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="building_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="attachment_point" not-null="true">
		<type name="geometry" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<constraint name="building_attachment_pk" type="pk-constr" table="public.building_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="building_attachment_meta_instance" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="500" y="1040"/>
	<column name="building_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="inheriting_table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="inheriting_cable_fk_column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="building_attachment_meta_inheritance_pk" type="pk-constr" table="public.building_attachment_meta_instance">
		<columns names="building_attachment_id,inheriting_table_name,inheriting_cable_fk_column_name" ref-type="src-columns"/>
	</constraint>
</table>

<view name="v_strand_attachment_implementation" layer="0" collapse-mode="2" max-obj-count="1">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Union of all instances of classes decended from strand_attachment, which should be all the objects for representing where strand is attached to something, giving a uniform way to access the interface "strand_attachment" field regardless of how the inheriting classes implement it.]]></comment>
	<position x="480" y="20"/>
	<reference>
		<expression><![CDATA[(
select 
strand_to_strand_attachment.strand_attachment_id as id,
strand_line_id,
strand_attachment.strand_line_squence,
CAST(ST_Line_Interpolate_Point(ST_MakeLine(u_p_a.latlong, u_p_b.latlong), percentage_along_segment)  as geometry(point, 4326)) as latlong
from strand_to_strand_attachment
inner join strand_attachment on strand_to_strand_attachment.strand_attachment_id = strand_attachment.id
left join strand_pole_attachment as s_p_a_a on strand_to_strand_attachment.segment_strand_attachment_a_id = s_p_a_a.id
left join pole_attachment  as p_a_a on s_p_a_a.pole_attachment_id = p_a_a.id
left join utility_pole as u_p_a on p_a_a.utility_pole_id = u_p_a.id
left join strand_pole_attachment as s_p_a_b on strand_to_strand_attachment.segment_strand_attachment_b_id = s_p_a_b.id
left join pole_attachment  as p_a_b on s_p_a_b.pole_attachment_id = p_a_b.id
left join utility_pole as u_p_b on p_a_b.utility_pole_id = u_p_b.id
)
union all 
(
select 
strand_attachment_id as id,
strand_line_id,
strand_attachment.strand_line_squence,
CAST(utility_pole.latlong as geometry(point, 4326)) as latlong
from strand_pole_attachment
inner join strand_attachment on strand_pole_attachment.strand_attachment_id = strand_attachment.id
inner join pole_attachment on strand_pole_attachment.pole_attachment_id = pole_attachment.id
inner join utility_pole on pole_attachment.utility_pole_id = utility_pole.id
)
union all
(
select 
strand_attachment_id as id,
strand_line_id,
strand_attachment.strand_line_squence,
CAST(building_attachment.attachment_point as geometry(point, 4326)) as latlong
from strand_building_attachment
inner join strand_attachment on strand_building_attachment.strand_attachment_id = strand_attachment.id
inner join building_attachment on strand_building_attachment.building_attachment_id = building_attachment.id
)]]></expression>
		<reftable name="public.strand_attachment"/>
		<reftable name="public.strand_to_strand_attachment"/>
		<reftable name="public.strand_pole_attachment"/>
		<reftable name="public.strand_building_attachment"/>
	</reference>
</view>

<relationship name="rel_v_strand_attachment_implementation_strand_attachment" type="reltv" layer="0"
	 src-table="public.v_strand_attachment_implementation"
	 dst-table="public.strand_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_v_strand_attachment_implementation_strand_to_strand__4572" type="reltv" layer="0"
	 src-table="public.v_strand_attachment_implementation"
	 dst-table="public.strand_to_strand_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_v_strand_attachment_implementation_strand_pole_att_4574" type="reltv" layer="0"
	 src-table="public.v_strand_attachment_implementation"
	 dst-table="public.strand_pole_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_v_strand_attachment_implementation_strand_building_a_5521" type="reltv" layer="0"
	 src-table="public.v_strand_attachment_implementation"
	 dst-table="public.strand_building_attachment"
	 src-required="false" dst-required="false"/>

<view name="v_fiber_cable_attachment_implementation" layer="0" collapse-mode="2" max-obj-count="1">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[TODO: add column for geographic point]]></comment>
	<position x="480" y="620"/>
	<reference>
		<expression><![CDATA[(select
fiber_cable_attachment_id,
fiber_cable_meterage,
fiber_cable_meterage_is_guess,
fiber_cable_id,
CAST(case
when (v_s_a_i_a.latlong is NOT NULL and  v_s_a_i_b.latlong is NOT NULL)
then ST_Line_Interpolate_Point(ST_MakeLine( v_s_a_i_a.latlong,  v_s_a_i_b.latlong), segment_percentage)
else v_s_a_i_a.latlong
end as geometry(point, 4326)) as latlong
from fiber_cable_strand_attachment
inner join fiber_cable_attachment on fiber_cable_strand_attachment.fiber_cable_attachment_id = fiber_cable_attachment.id
inner join v_strand_attachment_implementation as v_s_a_i_a on fiber_cable_strand_attachment.strand_attachment_a_id = v_s_a_i_a.id
left join v_strand_attachment_implementation as v_s_a_i_b on fiber_cable_strand_attachment.strand_attachment_b_id = v_s_a_i_b.id

)
union all
(
select
fiber_cable_attachment_id,
fiber_cable_meterage,
fiber_cable_meterage_is_guess,
fiber_cable_id,
CAST(utility_pole.latlong as geometry(point, 4326)) as latlong
from fiber_cable_pole_attachment
inner join fiber_cable_attachment on fiber_cable_pole_attachment.fiber_cable_attachment_id = fiber_cable_attachment.id
inner join pole_attachment on fiber_cable_pole_attachment.pole_attachment_id = pole_attachment.id
inner join utility_pole on pole_attachment.utility_pole_id = utility_pole.id
)
union all
(
select
fiber_cable_attachment_id,
fiber_cable_meterage,
fiber_cable_meterage_is_guess,
fiber_cable_id,
CAST(attachment_point as geometry(point, 4326)) as latlong
from fiber_cable_building_attachment
inner join fiber_cable_attachment on fiber_cable_building_attachment.fiber_cable_attachment_id = fiber_cable_attachment.id
inner join building_attachment on fiber_cable_building_attachment.building_attachment_id = building_attachment.id
)]]></expression>
		<reftable name="public.fiber_cable_attachment"/>
		<reftable name="public.fiber_cable_pole_attachment"/>
		<reftable name="public.fiber_cable_strand_attachment"/>
		<reftable name="public.fiber_cable_building_attachment"/>
	</reference>
</view>

<relationship name="rel_v_fiber_cable_attachment_implementation_fiber_cable__4646" type="reltv" layer="0"
	 src-table="public.v_fiber_cable_attachment_implementation"
	 dst-table="public.fiber_cable_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_v_fiber_cable_attachment_implementation_fiber_cable__4648" type="reltv" layer="0"
	 src-table="public.v_fiber_cable_attachment_implementation"
	 dst-table="public.fiber_cable_pole_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_v_fiber_cable_attachment_implementation_fiber_cable__4650" type="reltv" layer="0"
	 src-table="public.v_fiber_cable_attachment_implementation"
	 dst-table="public.fiber_cable_strand_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_v_fiber_cable_attachment_implementation_fiber_cable__5514" type="reltv" layer="0"
	 src-table="public.v_fiber_cable_attachment_implementation"
	 dst-table="public.fiber_cable_building_attachment"
	 src-required="false" dst-required="false"/>

<table name="fiber_enclosure_template" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Template with predefined values for fiber_enclosures and related tables.]]></comment>
	<position x="1651" y="1573"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="manufacturer_name">
		<type name="text" length="0"/>
	</column>
	<column name="enclosure_model">
		<type name="text" length="0"/>
	</column>
	<column name="template_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="fiber_enclosure_template_id" type="pk-constr" table="public.fiber_enclosure_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•manufacturer_name•enclosure_model•template_name⸣
1•Commscope•OTE-300•OTE-300]]>
	</initial-data>
</table>

<table name="enclosure_port_template" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Inherited fiber_connection.fiber_end_a_id is considered the in side of the enclosure, inherited fiber_connection.fiber_end_b_id is considered the out side of the enclosure. This is by convention and not enforced by checks.]]></comment>
	<position x="1652" y="1755"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="fiber_enclosure_template_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="port_label">
		<type name="text" length="0"/>
	</column>
	<column name="fiber_connection_template_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="enclosure_port_template_id_pk" type="pk-constr" table="public.enclosure_port_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="enclosure_port_uniquely_owns_inherited_fiber_connection_templat" type="uq-constr" table="public.enclosure_port_template">
		<columns names="fiber_connection_template_id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•fiber_enclosure_template_id•port_label•fiber_connection_template_id⸣
1•1••1⸣
2•1••2⸣
3•1••3⸣
4•1••4⸣
5•1••5⸣
6•1••6⸣
7•1••7⸣
8•1••8⸣
9•1••9⸣
10•1••10⸣
11•1••11⸣
12•1••12]]>
	</initial-data>
</table>

<table name="fiber_connection_enclosure_port_template" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1649" y="1944"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="a_optical_connector_type_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="b_optical_connector_type_id">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="fiber_connection_enclosure_port_template_pk" type="pk-constr" table="public.fiber_connection_enclosure_port_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•a_optical_connector_type_id•b_optical_connector_type_id⸣
1•11•⸣
2•11•⸣
3•11•⸣
4•11•⸣
5•11•⸣
6•11•⸣
7•11•⸣
8•11•⸣
9•11•⸣
10•11•⸣
11•11•⸣
12•11•]]>
	</initial-data>
</table>

<table name="fiber_cable_template" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Template with predefined values for fiber_cables and related tables.
]]></comment>
	<position x="1743" y="719"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="length_units" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="fiber_groups_depth" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="f_armored" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="f_outdoor" default-value="true">
		<type name="bool" length="0"/>
	</column>
	<column name="fiber_groups_top_level_count" default-value="1">
		<type name="smallint" length="0"/>
		<comment><![CDATA[Number/count of the fiber groups at the top level of the cable. For example, on a 48 count loose tube cable, this would be 4 for 4 buffer tubes. This is the same idea as the "subgroup_count" column in fiber_groups table, but it tells how many for the top level, since each level below the top would be stored in the "parent" fiber_group row.]]></comment>
	</column>
	<column name="template_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="fiber_cable_template_id_pk" type="pk-constr" table="public.fiber_cable_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_group_template" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Describes the structure/fiber groupings in a cable. A massive cable with ]]></comment>
	<position x="1757" y="495"/>
	<column name="id" not-null="true">
		<type name="smallserial" length="0"/>
	</column>
	<column name="subgroup_count" default-value="12">
		<type name="smallint" length="0"/>
		<comment><![CDATA[Number of subgroups or fibers in each of the groups this row represents. For example, 12 for 12 fibers in a buffer tube. Or, in a 96 count ribbon cable with a central tube, with this row being for the central tube, 8 for the 8 ribbons inside the central tube.]]></comment>
	</column>
	<column name="group_type_id" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="level" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="fiber_cable_template_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_group_template_pk" type="pk-constr" table="public.fiber_group_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter_template" layer="0" collapse-mode="1" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Template with predefined values for optical_splitters and related tables.]]></comment>
	<position x="2632.86" y="1815.24"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="inputs_count" not-null="true" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="outputs_count">
		<type name="smallint" length="0"/>
	</column>
	<column name="splitter_type_id" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="splitter_style_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="template_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="optical_splitter_template_id_pk" type="pk-constr" table="public.optical_splitter_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter_output_template" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3004.53" y="1690.47"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="power_drop" default-value="NULL">
		<type name="real" length="0"/>
		<comment><![CDATA[NULL for theoretically symmetric output (calulate drop from the related  optical_splitter.outputs_count). Used for uneven input/output splits. Note that this is the theoretical drop that you would get modeling (for multi in x multi out splitters) the splitter as 2 back to back single input splitters with inputs tied together).]]></comment>
	</column>
	<column name="output_label">
		<type name="text" length="0"/>
	</column>
	<column name="optical_splitter_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="optical_splitter_output_template_pk" type="pk-constr" table="public.optical_splitter_output_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="optical_splitter_output_tplt_uniquely_owns_inherited_fiber_end" type="uq-constr" table="public.optical_splitter_output_template">
		<columns names="fiber_end_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter_input_template" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3010.71" y="1848.33"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="power_drop" default-value="NULL">
		<type name="real" length="0"/>
		<comment><![CDATA[NULL for theoretically symmetric input (calulate drop from the related  optical_splitter.inputs_count). Used for uneven input/output splits. Note that this is the theoretical drop that you would get modeling (for multi in x multi out splitters) the splitter as 2 back to back single input splitters with inputs tied together).]]></comment>
	</column>
	<column name="input_label">
		<type name="text" length="0"/>
	</column>
	<column name="optical_splitter_template_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="optical_splitter_input_template_pk" type="pk-constr" table="public.optical_splitter_input_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="optical_splitter_input_tplt_uniquely_owns_inherited_fiber_end" type="uq-constr" table="public.optical_splitter_input_template">
		<columns names="fiber_end_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter_template_fiber_end" layer="0" collapse-mode="1" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3480.71" y="1824.76"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="optical_connector_type_id">
		<type name="smallint" length="0"/>
		<comment><![CDATA[If the end of this fiber does not have factory installed connector, this column is NULL.]]></comment>
	</column>
	<constraint name="optical_splitter_template_fiber_end_pk" type="pk-constr" table="public.optical_splitter_template_fiber_end">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="underground_vault_template" layer="0" collapse-mode="1" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Template with predefined values for underground_vaults and related tables.]]></comment>
	<position x="46.6667" y="1945"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="depth">
		<type name="real" length="0"/>
	</column>
	<column name="width">
		<type name="real" length="0"/>
	</column>
	<column name="length">
		<type name="real" length="0"/>
	</column>
	<column name="length_units_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="manufacturer_name">
		<type name="text" length="0"/>
	</column>
	<column name="vault_model">
		<type name="text" length="0"/>
	</column>
	<column name="template_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="underground_vault_template_pk" type="pk-constr" table="public.underground_vault_template">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="conduit_type" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="113.333" y="1616.67"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="diameter">
		<type name="real" length="0"/>
	</column>
	<column name="diameter_units">
		<type name="smallint" length="0"/>
	</column>
	<column name="length_units">
		<type name="smallint" length="0"/>
	</column>
	<column name="conduit_type_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="conduit_type_pk" type="pk-constr" table="public.conduit_type">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="history_text" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1712" y="5"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="text" length="0"/>
	</column>
	<column name="after_value">
		<type name="text" length="0"/>
	</column>
	<constraint name="history_text_pk" type="pk-constr" table="public.history_text">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_text_idx_table_column_date" table="public.history_text"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="change_date"/>
		</idxelement>
</index>

<table name="history_integer" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1713" y="179"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="integer" length="0"/>
	</column>
	<column name="after_value">
		<type name="integer" length="0"/>
	</column>
	<constraint name="history_integer_pk" type="pk-constr" table="public.history_integer">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_integer_idx_table_column_date" table="public.history_integer"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="change_date"/>
		</idxelement>
</index>

<table name="history_real" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1953" y="6"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="real" length="0"/>
	</column>
	<column name="after_value">
		<type name="real" length="0"/>
	</column>
	<constraint name="history_real_pk" type="pk-constr" table="public.history_real">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_real_idx_table_column_date" table="public.history_real"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="change_date"/>
		</idxelement>
</index>

<table name="history_smallint" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1954" y="183"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="smallint" length="0"/>
	</column>
	<column name="after_value">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="history_smallint_pk" type="pk-constr" table="public.history_smallint">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_smallint_idx_table_column_date" table="public.history_smallint"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="change_date"/>
		</idxelement>
</index>

<table name="history_bool" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2491" y="6"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="bool" length="0"/>
	</column>
	<column name="after_value">
		<type name="bool" length="0"/>
	</column>
	<constraint name="history_bool_pk" type="pk-constr" table="public.history_bool">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_bool_idx_table_column_date" table="public.history_bool"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="change_date"/>
		</idxelement>
</index>

<table name="history_geometry_point" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2184" y="6"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="geometry" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<column name="after_value">
		<type name="geometry" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<constraint name="history_geography_point_pk" type="pk-constr" table="public.history_geometry_point">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_geography_point_idx_table_column_date" table="public.history_geometry_point"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="change_date"/>
		</idxelement>
</index>

<table name="history_geometry_linestring" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2184" y="182"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="geometry" length="0" spatial-type="LINESTRING" variation="0" srid="4326"/>
	</column>
	<column name="after_value">
		<type name="geometry" length="0" spatial-type="LINESTRING" variation="0" srid="4326"/>
	</column>
	<constraint name="history_geography_linestring_pk" type="pk-constr" table="public.history_geometry_linestring">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_geography_linestring_idx_table_column_date" table="public.history_geometry_linestring"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="change_date"/>
		</idxelement>
</index>

<table name="history_row_creation" layer="0" collapse-mode="2" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2721" y="10"/>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="table_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="creation" not-null="true">
		<type name="timestamptz" length="0"/>
	</column>
</table>

<table name="history_row_deletion" layer="0" collapse-mode="2" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3282" y="213"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="table_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="deletion" not-null="true">
		<type name="timestamptz" length="0"/>
	</column>
	<constraint name="history_row_deletion_pk" type="pk-constr" table="public.history_row_deletion">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="history_text_deletion" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3572" y="0"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="history_row_deletion_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="text" length="0"/>
	</column>
	<constraint name="history_text_deletion_pk" type="pk-constr" table="public.history_text_deletion">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_text_deletion_idx_table_column" table="public.history_text_deletion"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
</index>

<table name="history_integer_deletion" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2899" y="277"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="history_row_deletion_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="integer" length="0"/>
	</column>
	<constraint name="history_integer_deletion_pk" type="pk-constr" table="public.history_integer_deletion">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_integer_deletion_idx_table_column" table="public.history_integer_deletion"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
</index>

<table name="history_real_deletion" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2945" y="58"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="history_row_deletion_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="real" length="0"/>
	</column>
	<constraint name="history_real_deletion_pk" type="pk-constr" table="public.history_real_deletion">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_real_deletion_idx_table_column" table="public.history_real_deletion"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
</index>

<sequence name="history_smallint_deletion_id_seq" cycle="false" start="1" increment="1" min-value="-2147483648" max-value="2147483647" cache="1">
	<schema name="public"/>
</sequence>

<table name="history_bool_deletion" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3688" y="426"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="history_row_deletion_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="bool" length="0"/>
	</column>
	<constraint name="history_bool__deletion_pk" type="pk-constr" table="public.history_bool_deletion">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_bool_deletion_idx_table_column" table="public.history_bool_deletion"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
</index>

<table name="history_geometry_point_deletion" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3713" y="189"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="history_row_deletion_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="geometry" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<constraint name="history_geography_point_deletion_pk" type="pk-constr" table="public.history_geometry_point_deletion">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_geography_point_deletion_idx_table_column" table="public.history_geometry_point_deletion"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
</index>

<table name="history_geometry_linestring_deletion" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3302" y="460"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="history_row_deletion_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="geometry" length="0" spatial-type="LINESTRING" variation="0" srid="4326"/>
	</column>
	<constraint name="history_geography_linestring_deletion_pk" type="pk-constr" table="public.history_geometry_linestring_deletion">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_geography_linestring_deletion_idx_table_column" table="public.history_geometry_linestring_deletion"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
</index>

<table name="history_smallint_deletion" layer="0" collapse-mode="1" max-obj-count="8">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2804" y="501"/>
	<column name="id" not-null="true">
		<type name="serial" length="0"/>
	</column>
	<column name="history_row_deletion_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="table_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="column_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="change_date" not-null="true" default-value="NOW()">
		<type name="timestamptz" length="0"/>
	</column>
	<column name="username">
		<type name="text" length="0"/>
	</column>
	<column name="before_value">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="history_smallint__deletion_pk" type="pk-constr" table="public.history_smallint_deletion">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="history_smallint_deletion_idx_table_column" table="public.history_smallint_deletion"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="table_name"/>
		</idxelement>
		<idxelement use-sorting="true" nulls-first="false" asc-order="true">
			<column name="column_name"/>
		</idxelement>
</index>

<constraint name="pole_reference" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.utility_pole" table="public.pole_attachment">
	<columns names="utility_pole_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_strand_line" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_line" table="public.strand_attachment">
	<columns names="strand_line_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="strand_to_strand_attachment_is_strand_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_attachment" table="public.strand_to_strand_attachment">
	<columns names="strand_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="strand_segment_has_end_a_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_attachment" table="public.strand_to_strand_attachment">
	<columns names="segment_strand_attachment_a_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="strand_segment_has_end_b_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_attachment" table="public.strand_to_strand_attachment">
	<columns names="segment_strand_attachment_b_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_pole_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.pole_attachment" table="public.strand_guy_wire">
	<columns names="pole_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitters_are_one_of_standard_types" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_types" table="public.optical_splitter">
	<columns names="splitter_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitters_are_one_of_a_standard_style" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_styles" table="public.optical_splitter">
	<columns names="splitter_style_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="splitter_can_be_located_inside_fiber_enclosure" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure" table="public.optical_splitter">
	<columns names="containing_fiber_enclosure" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_fiber_enclosure" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure" table="public.enclosure_port">
	<columns names="fiber_enclosure_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="enclosure_port_inherits_from_fiber_connection" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_connection" table="public.enclosure_port">
	<columns names="fiber_connection_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_has_one_length_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.fiber_cable">
	<columns names="length_units" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_group_has_one_fiber_group_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_group_types" table="public.fiber_group">
	<columns names="group_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_group_belongs_to_fiber_cable" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.fiber_group">
	<columns names="fiber_cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fibers_are_in_a_cable" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.fiber">
	<columns names="cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_has_potentially_multiple_group_identifiers" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber" table="public.fiber_identifier_index">
	<columns names="fiber_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_can_have_many_slack_coils" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.fiber_cable_slack_coil">
	<columns names="fiber_cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_outputs_belong_to_a_splitter" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter" table="public.optical_splitter_output">
	<columns names="optical_splitter_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_outputs_are_a_fiber" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_end" table="public.optical_splitter_output">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_inputs_belong_to_a_splitter" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter" table="public.optical_splitter_input">
	<columns names="optical_splitter_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_inputs_are_a_fiber" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_end" table="public.optical_splitter_input">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_end_can_have_optical_connector_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.fiber_end">
	<columns names="optical_connector_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="cable_fiber_end_is_attritube_of_cable_fiber" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber" table="public.cable_fiber_end">
	<columns names="fiber_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="cable_fiber_end_inherts_from_fiber_end" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_end" table="public.cable_fiber_end">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_connection_may_connect_fiber_end_a" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_end" table="public.fiber_connection">
	<columns names="connected_fiber_end_a_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_connection_may_connect_fiber_end_b" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_end" table="public.fiber_connection">
	<columns names="connected_fiber_end_b_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_connection_a_may_have_optical_connector_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.fiber_connection">
	<columns names="a_optical_connector_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_connection_b_may_have_optical_connector_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.fiber_connection">
	<columns names="b_optical_connector_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_splice_is_a_fiber_connection" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_connection" table="public.fiber_splice">
	<columns names="fiber_connection_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="demensions_measurements_must_have_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.underground_vault">
	<columns names="length_units_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="underground_conduit_may_start_at_underground_vault" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.underground_vault" table="public.underground_conduit">
	<columns names="start_underground_vault_entry_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="underground_conduit_may_end_at_underground_vault" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.underground_vault" table="public.underground_conduit">
	<columns names="end_underground_vault_entry_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="underground_conduit_has_a_conduit_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.conduit_type" table="public.underground_conduit">
	<columns names="conduit_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="m2m_fiber_cable_slack_coil_underground_vault" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.underground_vault" table="public.fiber_cable_slack_coil_located_in_underground_vault">
	<columns names="underground_vault_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="m2m_underground_vault_fiber_cable_slack_coil" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable_slack_coil" table="public.fiber_cable_slack_coil_located_in_underground_vault">
	<columns names="fiber_cable_slack_loop_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="m2m_fiber_enclosure_underground_vault" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure" table="public.fiber_enclosure_located_in_underground_vault">
	<columns names="fiber_enclosure_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="m2m_underground_vault_fiber_enclosure" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.underground_vault" table="public.fiber_enclosure_located_in_underground_vault">
	<columns names="underground_vault_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_end_inheritance_has_fiber_end_instance" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_end" table="public.fiber_end_meta_instance_inheritance">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_connection_can_be_inherited_by_many_tables" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_connection" table="public.fiber_connection_meta_instance_inheritance">
	<columns names="fiber_connection_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_located_in_fiber_enclosure_has_fiber_cable" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.fiber_cable_located_in_fiber_enclosure">
	<columns names="fiber_cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_located_in_fiber_enclosure_has_fiber_enclosure" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure" table="public.fiber_cable_located_in_fiber_enclosure">
	<columns names="fiber_enclosure_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_strand_attachment_requires_strand_attachment_a" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_attachment" table="public.fiber_cable_strand_attachment">
	<columns names="strand_attachment_a_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_fiber_cable_strand_attachment_may_have_strand_attachment_b" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_attachment" table="public.fiber_cable_strand_attachment">
	<columns names="strand_attachment_b_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_strand_attachment_is_fiber_cable_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable_attachment" table="public.fiber_cable_strand_attachment">
	<columns names="fiber_cable_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="strand_pole_attachment_is_pole_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.pole_attachment" table="public.strand_pole_attachment">
	<columns names="pole_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="strand_pole_attachment_is_strand_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_attachment" table="public.strand_pole_attachment">
	<columns names="strand_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="pole_attachment_inheritance_requires_pole_attachment_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.pole_attachment" table="public.pole_attachment_meta_instance_inheritance">
	<columns names="pole_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="strand_attachment_instance_inheritance_has_strand_attachment_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_attachment" table="public.strand_attachment_meta_instance_inheritance">
	<columns names="strand_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="strand_building_attachment_has_strand_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_attachment" table="public.strand_building_attachment">
	<columns names="strand_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="strand_building_attachment_has_building_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.building_attachment" table="public.strand_building_attachment">
	<columns names="building_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_attachment_has_fiber_cable" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.fiber_cable_attachment">
	<columns names="fiber_cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_attachment_descendant_is_fiber_cable_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable_attachment" table="public.fiber_cable_attachment_meta_instance_inheritance">
	<columns names="fiber_cable_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_pole_attachment_is_pole_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.pole_attachment" table="public.fiber_cable_pole_attachment">
	<columns names="pole_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_pole_attachment_is_fiber_cable_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable_attachment" table="public.fiber_cable_pole_attachment">
	<columns names="fiber_cable_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_building_attachment_has_building" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.building_attachment" table="public.fiber_cable_building_attachment">
	<columns names="building_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_building_attachment_has_fiber_cable_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable_attachment" table="public.fiber_cable_building_attachment">
	<columns names="fiber_cable_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="building_attachment_need_building" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.building" table="public.building_attachment">
	<columns names="building_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="building_attachment_inheritance_has_building_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.building_attachment" table="public.building_attachment_meta_instance">
	<columns names="building_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_fiber_enclosure" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure_template" table="public.enclosure_port_template">
	<columns names="fiber_enclosure_template_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="enclosure_port_inherits_from_fiber_connection" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_connection_enclosure_port_template" table="public.enclosure_port_template">
	<columns names="fiber_connection_template_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_connection_a_may_have_optical_connector_type_cp" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.fiber_connection_enclosure_port_template">
	<columns names="a_optical_connector_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_connection_b_may_have_optical_connector_type_cp" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.fiber_connection_enclosure_port_template">
	<columns names="b_optical_connector_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_template_has_one_length_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.fiber_cable_template">
	<columns names="length_units" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_group_template_has_one_fiber_group_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_group_types" table="public.fiber_group_template">
	<columns names="group_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_group_template_belongs_to_fiber_cable_template" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable_template" table="public.fiber_group_template">
	<columns names="fiber_cable_template_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitters_are_one_of_standard_types" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_types" table="public.optical_splitter_template">
	<columns names="splitter_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitters_templates_are_one_of_a_standard_style" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_styles" table="public.optical_splitter_template">
	<columns names="splitter_style_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_outputs_templates_belong_to_a_splitter_templat" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_template" table="public.optical_splitter_output_template">
	<columns names="optical_splitter_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_outputs_are_a_fiber" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_template_fiber_end" table="public.optical_splitter_output_template">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_inputs_templates_belong_to_a_splitter_template" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_template" table="public.optical_splitter_input_template">
	<columns names="optical_splitter_template_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_inputs_are_a_fiber" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_template_fiber_end" table="public.optical_splitter_input_template">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_end_can_have_optical_connector_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.optical_splitter_template_fiber_end">
	<columns names="optical_connector_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="demensions_measurements_must_have_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.underground_vault_template">
	<columns names="length_units_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="length_has_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.conduit_type">
	<columns names="length_units" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="diameter_has_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.conduit_type">
	<columns names="diameter_units" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="history_text_deletion_belongs_to_history_row_deletion" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.history_row_deletion" table="public.history_text_deletion">
	<columns names="history_row_deletion_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="history_integer_deletion_belongs_to_history_row_deletion" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.history_row_deletion" table="public.history_integer_deletion">
	<columns names="history_row_deletion_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="history_real_deletion_belongs_to_history_row_deletion" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.history_row_deletion" table="public.history_real_deletion">
	<columns names="history_row_deletion_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="history_smallint_deletion_belongs_to_history_row_deletion" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.history_row_deletion" table="public.history_smallint_deletion">
	<columns names="history_row_deletion_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="history_bool_deletion_belongs_to_history_row_deletion" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.history_row_deletion" table="public.history_bool_deletion">
	<columns names="history_row_deletion_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="history_geography_point_deletion_needs_history_row_deletion" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.history_row_deletion" table="public.history_geometry_point_deletion">
	<columns names="history_row_deletion_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="history_geography_linestring_deletion_needs_row_deletion" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.history_row_deletion" table="public.history_geometry_linestring_deletion">
	<columns names="history_row_deletion_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_pole_attachment_utility_pole" type="relfk" layer="0"
	 src-table="public.pole_attachment"
	 dst-table="public.utility_pole" reference-fk="pole_reference"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_attachment_strand_line" type="relfk" layer="0"
	 src-table="public.strand_attachment"
	 dst-table="public.strand_line" reference-fk="ref_strand_line"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_to_strand_attachment_strand_attachment" type="relfk" layer="0"
	 src-table="public.strand_to_strand_attachment"
	 dst-table="public.strand_attachment" reference-fk="strand_to_strand_attachment_is_strand_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_to_strand_attachment_strand_attachment1" type="relfk" layer="0"
	 src-table="public.strand_to_strand_attachment"
	 dst-table="public.strand_attachment" reference-fk="strand_segment_has_end_a_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_to_strand_attachment_strand_attachment2" type="relfk" layer="0"
	 src-table="public.strand_to_strand_attachment"
	 dst-table="public.strand_attachment" reference-fk="strand_segment_has_end_b_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_guy_wire_pole_attachment" type="relfk" layer="0"
	 src-table="public.strand_guy_wire"
	 dst-table="public.pole_attachment" reference-fk="ref_pole_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_optical_splitter_types" type="relfk" layer="0"
	 src-table="public.optical_splitter"
	 dst-table="public.optical_splitter_types" reference-fk="optical_splitters_are_one_of_standard_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_optical_splitter_styles" type="relfk" layer="0"
	 src-table="public.optical_splitter"
	 dst-table="public.optical_splitter_styles" reference-fk="optical_splitters_are_one_of_a_standard_style"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_fiber_enclosure" type="relfk" layer="0"
	 src-table="public.optical_splitter"
	 dst-table="public.fiber_enclosure" reference-fk="splitter_can_be_located_inside_fiber_enclosure"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_port_fiber_enclosure" type="relfk" layer="0"
	 src-table="public.enclosure_port"
	 dst-table="public.fiber_enclosure" reference-fk="ref_fiber_enclosure"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_port_fiber_connection" type="relfk" layer="0"
	 src-table="public.enclosure_port"
	 dst-table="public.fiber_connection" reference-fk="enclosure_port_inherits_from_fiber_connection"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_length_units" type="relfk" layer="0"
	 src-table="public.fiber_cable"
	 dst-table="public.length_units" reference-fk="fiber_cable_has_one_length_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_group_fiber_group_types" type="relfk" layer="0"
	 src-table="public.fiber_group"
	 dst-table="public.fiber_group_types" reference-fk="fiber_group_has_one_fiber_group_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_group_fiber_cable" type="relfk" layer="0"
	 src-table="public.fiber_group"
	 dst-table="public.fiber_cable" reference-fk="fiber_group_belongs_to_fiber_cable"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_fiber_cable" type="relfk" layer="0"
	 src-table="public.fiber"
	 dst-table="public.fiber_cable" reference-fk="fibers_are_in_a_cable"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_identifier_index_fiber" type="relfk" layer="0"
	 src-table="public.fiber_identifier_index"
	 dst-table="public.fiber" reference-fk="fiber_has_potentially_multiple_group_identifiers"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_slack_coil_fiber_cable" type="relfk" layer="0"
	 src-table="public.fiber_cable_slack_coil"
	 dst-table="public.fiber_cable" reference-fk="fiber_cable_can_have_many_slack_coils"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_output_optical_splitter" type="relfk" layer="0"
	 src-table="public.optical_splitter_output"
	 dst-table="public.optical_splitter" reference-fk="optical_splitter_outputs_belong_to_a_splitter"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_output_fiber_end" type="relfk" layer="0"
	 src-table="public.optical_splitter_output"
	 dst-table="public.fiber_end" reference-fk="optical_splitter_outputs_are_a_fiber"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_input_optical_splitter" type="relfk" layer="0"
	 src-table="public.optical_splitter_input"
	 dst-table="public.optical_splitter" reference-fk="optical_splitter_inputs_belong_to_a_splitter"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_input_fiber_end" type="relfk" layer="0"
	 src-table="public.optical_splitter_input"
	 dst-table="public.fiber_end" reference-fk="optical_splitter_inputs_are_a_fiber"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_end_optical_connector_types" type="relfk" layer="0"
	 src-table="public.fiber_end"
	 dst-table="public.optical_connector_types" reference-fk="fiber_end_can_have_optical_connector_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_cable_fiber_end_fiber" type="relfk" layer="0"
	 src-table="public.cable_fiber_end"
	 dst-table="public.fiber" reference-fk="cable_fiber_end_is_attritube_of_cable_fiber"
	 src-required="false" dst-required="false"/>

<relationship name="rel_cable_fiber_end_fiber_end" type="relfk" layer="0"
	 src-table="public.cable_fiber_end"
	 dst-table="public.fiber_end" reference-fk="cable_fiber_end_inherts_from_fiber_end"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_connection_fiber_end" type="relfk" layer="0"
	 src-table="public.fiber_connection"
	 dst-table="public.fiber_end" reference-fk="fiber_connection_may_connect_fiber_end_a"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_connection_fiber_end1" type="relfk" layer="0"
	 src-table="public.fiber_connection"
	 dst-table="public.fiber_end" reference-fk="fiber_connection_may_connect_fiber_end_b"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_connection_optical_connector_types" type="relfk" layer="0"
	 src-table="public.fiber_connection"
	 dst-table="public.optical_connector_types" reference-fk="fiber_connection_a_may_have_optical_connector_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_connection_optical_connector_types1" type="relfk" layer="0"
	 src-table="public.fiber_connection"
	 dst-table="public.optical_connector_types" reference-fk="fiber_connection_b_may_have_optical_connector_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_splice_fiber_connection" type="relfk" layer="0"
	 src-table="public.fiber_splice"
	 dst-table="public.fiber_connection" reference-fk="fiber_splice_is_a_fiber_connection"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_vault_length_units" type="relfk" layer="0"
	 src-table="public.underground_vault"
	 dst-table="public.length_units" reference-fk="demensions_measurements_must_have_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_conduit_underground_vault" type="relfk" layer="0"
	 src-table="public.underground_conduit"
	 dst-table="public.underground_vault" reference-fk="underground_conduit_may_start_at_underground_vault"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_conduit_underground_vault1" type="relfk" layer="0"
	 src-table="public.underground_conduit"
	 dst-table="public.underground_vault" reference-fk="underground_conduit_may_end_at_underground_vault"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_conduit_conduit_type" type="relfk" layer="0"
	 src-table="public.underground_conduit"
	 dst-table="public.conduit_type" reference-fk="underground_conduit_has_a_conduit_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_slack_coil_located_in_underground_vault_undergr" type="relfk" layer="0"
	 src-table="public.fiber_cable_slack_coil_located_in_underground_vault"
	 dst-table="public.underground_vault" reference-fk="m2m_fiber_cable_slack_coil_underground_vault"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_slack_coil_located_in_underground_vault_fiber_c" type="relfk" layer="0"
	 src-table="public.fiber_cable_slack_coil_located_in_underground_vault"
	 dst-table="public.fiber_cable_slack_coil" reference-fk="m2m_underground_vault_fiber_cable_slack_coil"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_enclosure_located_in_underground_vault_fiber_enclosur" type="relfk" layer="0"
	 src-table="public.fiber_enclosure_located_in_underground_vault"
	 dst-table="public.fiber_enclosure" reference-fk="m2m_fiber_enclosure_underground_vault"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_enclosure_located_in_underground_vault_underground_va" type="relfk" layer="0"
	 src-table="public.fiber_enclosure_located_in_underground_vault"
	 dst-table="public.underground_vault" reference-fk="m2m_underground_vault_fiber_enclosure"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_end_meta_instance_inheritance_fiber_end" type="relfk" layer="0"
	 src-table="public.fiber_end_meta_instance_inheritance"
	 dst-table="public.fiber_end" reference-fk="fiber_end_inheritance_has_fiber_end_instance"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_connection_meta_instance_inheritance_fiber_connection" type="relfk" layer="0"
	 src-table="public.fiber_connection_meta_instance_inheritance"
	 dst-table="public.fiber_connection" reference-fk="fiber_connection_can_be_inherited_by_many_tables"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_located_in_fiber_enclosure_fiber_cable" type="relfk" layer="0"
	 src-table="public.fiber_cable_located_in_fiber_enclosure"
	 dst-table="public.fiber_cable" reference-fk="fiber_cable_located_in_fiber_enclosure_has_fiber_cable"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_located_in_fiber_enclosure_fiber_enclosure" type="relfk" layer="0"
	 src-table="public.fiber_cable_located_in_fiber_enclosure"
	 dst-table="public.fiber_enclosure" reference-fk="fiber_cable_located_in_fiber_enclosure_has_fiber_enclosure"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_strand_attachment_strand_attachment" type="relfk" layer="0"
	 src-table="public.fiber_cable_strand_attachment"
	 dst-table="public.strand_attachment" reference-fk="fiber_cable_strand_attachment_requires_strand_attachment_a"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_strand_attachment_strand_attachment1" type="relfk" layer="0"
	 src-table="public.fiber_cable_strand_attachment"
	 dst-table="public.strand_attachment" reference-fk="ref_fiber_cable_strand_attachment_may_have_strand_attachment_b"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_strand_attachment_fiber_cable_attachment" type="relfk" layer="0"
	 src-table="public.fiber_cable_strand_attachment"
	 dst-table="public.fiber_cable_attachment" reference-fk="fiber_cable_strand_attachment_is_fiber_cable_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_pole_attachment_pole_attachment" type="relfk" layer="0"
	 src-table="public.strand_pole_attachment"
	 dst-table="public.pole_attachment" reference-fk="strand_pole_attachment_is_pole_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_pole_attachment_strand_attachment" type="relfk" layer="0"
	 src-table="public.strand_pole_attachment"
	 dst-table="public.strand_attachment" reference-fk="strand_pole_attachment_is_strand_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pole_attachment_meta_instance_inheritance_pole_attachment" type="relfk" layer="0"
	 src-table="public.pole_attachment_meta_instance_inheritance"
	 dst-table="public.pole_attachment" reference-fk="pole_attachment_inheritance_requires_pole_attachment_id"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_attachment_meta_instance_inheritance_strand_attachme" type="relfk" layer="0"
	 src-table="public.strand_attachment_meta_instance_inheritance"
	 dst-table="public.strand_attachment" reference-fk="strand_attachment_instance_inheritance_has_strand_attachment_id"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_building_attachment_strand_attachment" type="relfk" layer="0"
	 src-table="public.strand_building_attachment"
	 dst-table="public.strand_attachment" reference-fk="strand_building_attachment_has_strand_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_building_attachment_building_attachment" type="relfk" layer="0"
	 src-table="public.strand_building_attachment"
	 dst-table="public.building_attachment" reference-fk="strand_building_attachment_has_building_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_attachment_fiber_cable" type="relfk" layer="0"
	 src-table="public.fiber_cable_attachment"
	 dst-table="public.fiber_cable" reference-fk="fiber_cable_attachment_has_fiber_cable"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_attachment_meta_instance_inheritance_fiber_cabl" type="relfk" layer="0"
	 src-table="public.fiber_cable_attachment_meta_instance_inheritance"
	 dst-table="public.fiber_cable_attachment" reference-fk="fiber_cable_attachment_descendant_is_fiber_cable_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_pole_attachment_pole_attachment" type="relfk" layer="0"
	 src-table="public.fiber_cable_pole_attachment"
	 dst-table="public.pole_attachment" reference-fk="fiber_cable_pole_attachment_is_pole_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_pole_attachment_fiber_cable_attachment" type="relfk" layer="0"
	 src-table="public.fiber_cable_pole_attachment"
	 dst-table="public.fiber_cable_attachment" reference-fk="fiber_cable_pole_attachment_is_fiber_cable_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_building_attachment_building_attachment" type="relfk" layer="0"
	 src-table="public.fiber_cable_building_attachment"
	 dst-table="public.building_attachment" reference-fk="fiber_cable_building_attachment_has_building"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_building_attachment_fiber_cable_attachment" type="relfk" layer="0"
	 src-table="public.fiber_cable_building_attachment"
	 dst-table="public.fiber_cable_attachment" reference-fk="fiber_cable_building_attachment_has_fiber_cable_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_building_attachment_building" type="relfk" layer="0"
	 src-table="public.building_attachment"
	 dst-table="public.building" reference-fk="building_attachment_need_building"
	 src-required="false" dst-required="false"/>

<relationship name="rel_building_attachment_meta_instance_building_attachment" type="relfk" layer="0"
	 src-table="public.building_attachment_meta_instance"
	 dst-table="public.building_attachment" reference-fk="building_attachment_inheritance_has_building_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_port_template_fiber_enclosure_template" type="relfk" layer="0"
	 src-table="public.enclosure_port_template"
	 dst-table="public.fiber_enclosure_template" reference-fk="ref_fiber_enclosure"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_port_template_fiber_connection_enclosure_port_tem" type="relfk" layer="0"
	 src-table="public.enclosure_port_template"
	 dst-table="public.fiber_connection_enclosure_port_template" reference-fk="enclosure_port_inherits_from_fiber_connection"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_connection_enclosure_port_template_optical_connector_" type="relfk" layer="0"
	 src-table="public.fiber_connection_enclosure_port_template"
	 dst-table="public.optical_connector_types" reference-fk="fiber_connection_a_may_have_optical_connector_type_cp"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_connection_enclosure_port_template_optical_con_4870" type="relfk" layer="0"
	 src-table="public.fiber_connection_enclosure_port_template"
	 dst-table="public.optical_connector_types" reference-fk="fiber_connection_b_may_have_optical_connector_type_cp"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_template_length_units" type="relfk" layer="0"
	 src-table="public.fiber_cable_template"
	 dst-table="public.length_units" reference-fk="fiber_cable_template_has_one_length_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_group_template_fiber_group_types" type="relfk" layer="0"
	 src-table="public.fiber_group_template"
	 dst-table="public.fiber_group_types" reference-fk="fiber_group_template_has_one_fiber_group_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_group_template_fiber_cable_template" type="relfk" layer="0"
	 src-table="public.fiber_group_template"
	 dst-table="public.fiber_cable_template" reference-fk="fiber_group_template_belongs_to_fiber_cable_template"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_template_optical_splitter_types" type="relfk" layer="0"
	 src-table="public.optical_splitter_template"
	 dst-table="public.optical_splitter_types" reference-fk="optical_splitters_are_one_of_standard_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_template_optical_splitter_styles" type="relfk" layer="0"
	 src-table="public.optical_splitter_template"
	 dst-table="public.optical_splitter_styles" reference-fk="optical_splitters_templates_are_one_of_a_standard_style"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_output_template_optical_splitter_template" type="relfk" layer="0"
	 src-table="public.optical_splitter_output_template"
	 dst-table="public.optical_splitter_template" reference-fk="optical_splitter_outputs_templates_belong_to_a_splitter_templat"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_output_template_optical_splitter_template_" type="relfk" layer="0"
	 src-table="public.optical_splitter_output_template"
	 dst-table="public.optical_splitter_template_fiber_end" reference-fk="optical_splitter_outputs_are_a_fiber"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_input_template_optical_splitter_template" type="relfk" layer="0"
	 src-table="public.optical_splitter_input_template"
	 dst-table="public.optical_splitter_template" reference-fk="optical_splitter_inputs_templates_belong_to_a_splitter_template"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_input_template_optical_splitter_template_f" type="relfk" layer="0"
	 src-table="public.optical_splitter_input_template"
	 dst-table="public.optical_splitter_template_fiber_end" reference-fk="optical_splitter_inputs_are_a_fiber"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_template_fiber_end_optical_connector_types" type="relfk" layer="0"
	 src-table="public.optical_splitter_template_fiber_end"
	 dst-table="public.optical_connector_types" reference-fk="fiber_end_can_have_optical_connector_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_vault_template_length_units" type="relfk" layer="0"
	 src-table="public.underground_vault_template"
	 dst-table="public.length_units" reference-fk="demensions_measurements_must_have_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_conduit_type_length_units" type="relfk" layer="0"
	 src-table="public.conduit_type"
	 dst-table="public.length_units" reference-fk="length_has_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_conduit_type_length_units1" type="relfk" layer="0"
	 src-table="public.conduit_type"
	 dst-table="public.length_units" reference-fk="diameter_has_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_history_text_deletion_history_row_deletion" type="relfk" layer="0"
	 src-table="public.history_text_deletion"
	 dst-table="public.history_row_deletion" reference-fk="history_text_deletion_belongs_to_history_row_deletion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_history_integer_deletion_history_row_deletion" type="relfk" layer="0"
	 src-table="public.history_integer_deletion"
	 dst-table="public.history_row_deletion" reference-fk="history_integer_deletion_belongs_to_history_row_deletion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_history_real_deletion_history_row_deletion" type="relfk" layer="0"
	 src-table="public.history_real_deletion"
	 dst-table="public.history_row_deletion" reference-fk="history_real_deletion_belongs_to_history_row_deletion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_history_smallint_deletion_history_row_deletion" type="relfk" layer="0"
	 src-table="public.history_smallint_deletion"
	 dst-table="public.history_row_deletion" reference-fk="history_smallint_deletion_belongs_to_history_row_deletion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_history_bool_deletion_history_row_deletion" type="relfk" layer="0"
	 src-table="public.history_bool_deletion"
	 dst-table="public.history_row_deletion" reference-fk="history_bool_deletion_belongs_to_history_row_deletion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_history_geometry_point_deletion_history_row_deletion" type="relfk" layer="0"
	 src-table="public.history_geometry_point_deletion"
	 dst-table="public.history_row_deletion" reference-fk="history_geography_point_deletion_needs_history_row_deletion"
	 src-required="false" dst-required="false"/>

<relationship name="rel_history_geometry_linestring_deletion_history_row_deletion" type="relfk" layer="0"
	 src-table="public.history_geometry_linestring_deletion"
	 dst-table="public.history_row_deletion" reference-fk="history_geography_linestring_deletion_needs_row_deletion"
	 src-required="false" dst-required="false"/>

</dbmodel>

<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.9.2-beta1" author="Copyright 2019, Erik Andersen &lt;erik@eoni.com&gt;, Licensed under the AGPLv3 with use by employees considered distribution" last-position="874,75" last-zoom="0.8" max-obj-count="50"
	 default-schema="public" default-owner="postgres">
<database name="fossfiber" is-template="false" allow-conns="true">
	<comment><![CDATA[Database Schema and format Licensed under the AGPL v 3.0, available at https://www.gnu.org/licenses/agpl-3.0-standalone.html . Note that for the purposes of this project, use over a network by a employer's employees constitues distribution and causes the requirements for provision of source code for any modifications to apply.]]></comment>
</database>

<schema name="public" layer="0" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<extension name="postgis">
</extension>

<table name="pole_attachment" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="600" y="1360"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="height_feet">
		<type name="smallint" length="0"/>
	</column>
	<column name="height_inches">
		<type name="smallint" length="0"/>
	</column>
	<column name="height_meters">
		<type name="real" length="0"/>
	</column>
	<column name="attached_pole" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="pole_attachement_id_pk" type="pk-constr" table="public.pole_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_line" layer="0" collapse-mode="1" max-obj-count="1">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="640" y="1600"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<constraint name="strand_line_id_pk" type="pk-constr" table="public.strand_line">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_attachment" layer="0" collapse-mode="1" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="60" y="1280"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="attachment_type" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="pole_attachment_id">
		<type name="integer" length="0"/>
	</column>
	<column name="strand_attachment_id">
		<type name="integer" length="0"/>
	</column>
	<column name="strand_line_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="attachment squence">
		<type name="real" length="0"/>
		<comment><![CDATA[Used to sort attachments into their order that they occur along the strand]]></comment>
	</column>
	<constraint name="inheritance_option_attachment_type_check" type="ck-constr" table="public.strand_attachment">
			<expression><![CDATA[(attachment_type = 1 and pole_attachment_id is not NULL and strand_attachment_id is NULL) OR (attachment_type = 2 and pole_attachment_id is NULL and strand_attachment_id is not NULL)]]></expression>
		<comment><![CDATA[Make sure this pure virtual base class ends up being one of two child classes]]></comment>
	</constraint>
	<constraint name="strand_attachment_id_pk" type="pk-constr" table="public.strand_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_to_strand_attachment" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Should we denormalize and cache a point of where this strand attachment ends up being on the parent strand?]]></comment>
	<position x="700" y="1760"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="attached_to_strand" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="distance_along_attached_to_strand" not-null="true">
		<type name="real" length="0"/>
	</column>
	<constraint name="strand_to_strand_attachment_id_pk" type="pk-constr" table="public.strand_to_strand_attachment">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="strand_guy_wire" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1220" y="1580"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="standoff_pipe" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="pole_attachment_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="azimuth_from_pole">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="azimuth_is_degrees" type="ck-constr" table="public.strand_guy_wire">
			<expression><![CDATA[azimuth_from_pole >= 0 and azimuth_from_pole < 360]]></expression>
	</constraint>
	<constraint name="strand_guy_wire_pk" type="pk-constr" table="public.strand_guy_wire">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_enclosure" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="820" y="1060"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="longlat">
		<type name="geography" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<column name="manufacturer_name">
		<type name="text" length="0"/>
	</column>
	<column name="enclosure_model">
		<type name="text" length="0"/>
	</column>
	<constraint name="fiber_enclosure_id" type="pk-constr" table="public.fiber_enclosure">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter" layer="0" collapse-mode="1" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="60" y="60"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="inputs_count" not-null="true" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="outputs_count">
		<type name="smallint" length="0"/>
	</column>
	<column name="splitter_type_id" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="splitter_style_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="containing_fiber_enclosure">
		<type name="integer" length="0"/>
	</column>
	<constraint name="optical_splitter_id_pk" type="pk-constr" table="public.optical_splitter">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="enclosure_port" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1200" y="340"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_enclosure_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="inside_port_type_id">
		<type name="integer" length="0"/>
	</column>
	<column name="outside_port_type_id">
		<type name="integer" length="0"/>
	</column>
	<column name="port_label">
		<type name="text" length="0"/>
	</column>
	<constraint name="enclosure_port_id_pk" type="pk-constr" table="public.enclosure_port">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_connector_types" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1820" y="580"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT">
		<type name="integer" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="gender" default-value="'M'">
		<type name="char" length="0"/>
	</column>
	<constraint name="optical_connector_types_pk" type="pk-constr" table="public.optical_connector_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•name•gender⸣
•SC/APC•M⸣
•SC/APC•F⸣
•SC/UPC•M⸣
•SC/UPC•F⸣
•LC/UPC•M⸣
•LC/UPC•F⸣
•LC/APC•M⸣
•LC/APC•F]]>
	</initial-data>
</table>

<table name="enclosure_cable_entry" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1260" y="620"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="direction">
		<type name="smallint" length="0"/>
		<comment><![CDATA[1 for asending cable footage at entry, -1 for descending cable footage at entry]]></comment>
	</column>
	<column name="fiber_enclosure_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="marking_tape_color">
		<type name="text" length="0"/>
		<comment><![CDATA[If cable entry into the enclosure is marked with tape, what color is it?]]></comment>
	</column>
	<constraint name="enclosure_cable_entry_id_pk" type="pk-constr" table="public.enclosure_cable_entry">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable" layer="0" collapse-mode="1" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Need to figure out how to record and represent fiber cable structure. (Ribbon, loose tube, fiber count, etc. Armored, dielectric, gel?]]></comment>
	<position x="1880" y="780"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="cable_start_length_measure">
		<type name="real" length="0"/>
	</column>
	<column name="cable_end_length_measure">
		<type name="real" length="0"/>
	</column>
	<column name="length_units" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="fiber_groups_depth" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="f_armored" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="f_outdoor" default-value="true">
		<type name="bool" length="0"/>
	</column>
	<column name="fiber_groups_top_level_count" default-value="1">
		<type name="smallint" length="0"/>
		<comment><![CDATA[Number/count of the fiber groups at the top level of the cable. For example, on a 48 count loose tube cable, this would be 4 for 4 buffer tubes. This is the same idea as the "subgroup_count" column in fiber_groups table, but it tells how many for the top level, since each level below the top would be stored in the "parent" fiber_group row.]]></comment>
	</column>
	<constraint name="fiber_cable_id_pk" type="pk-constr" table="public.fiber_cable">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="length_units" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2380" y="360"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT">
		<type name="smallint" length="0"/>
	</column>
	<column name="unit_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="unit_shortsymbol" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="length_units_id_pk" type="pk-constr" table="public.length_units">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•unit_name•unit_shortsymbol⸣
1•feet•ft⸣
2•meters•m]]>
	</initial-data>
</table>

<table name="fiber_group_types" layer="0" collapse-mode="1" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="3040" y="380"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="smallint" length="0"/>
	</column>
	<column name="shortname" default-value="'buffer tube'">
		<type name="varchar" length="15"/>
	</column>
	<constraint name="fiber_group_types_pk" type="pk-constr" table="public.fiber_group_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_group" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Describes the structure/fiber groupings in a cable. A massive cable with ]]></comment>
	<position x="2420" y="560"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="smallint" length="0"/>
	</column>
	<column name="subgroup_count" default-value="12">
		<type name="smallint" length="0"/>
		<comment><![CDATA[Number of subgroups or fibers in each of the groups this row represents. For example, 12 for 12 fibers in a buffer tube. Or, in a 96 count ribbon cable with a central tube, with this row being for the central tube, 8 for the 8 ribbons inside the central tube.]]></comment>
	</column>
	<column name="group_type_id" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="level" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="fiber_cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_group_pk" type="pk-constr" table="public.fiber_group">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[TODO: should this be one fiber for the whole length of the cable, or multiple rows in this table for when midspans happen in a cable?]]></comment>
	<position x="2320" y="140"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="cable_start_footage" default-value="0.0">
		<type name="real" length="0"/>
	</column>
	<column name="cable_end_footage" not-null="true">
		<type name="real" length="0"/>
	</column>
	<column name="cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_pk" type="pk-constr" table="public.fiber">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_identifier_index" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Used to store the information about which fiber in a cable. Not columns on the fiber table because of the potential for varying numbers/levels of grouping in a cable. For example, on the huge fiber count cable, you could have multiple "buffer tubes" with multiple ribbons inside, and inside each ribbon multiple fibers.]]></comment>
	<position x="2980" y="140"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="group_index" default-value="1">
		<type name="smallint" length="0"/>
	</column>
	<column name="group_level" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="fiber_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_identifier_index_pk" type="pk-constr" table="public.fiber_identifier_index">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_slack_loop" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2480" y="840"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_cable_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="units_of_slack">
		<type name="real" length="0"/>
		<comment><![CDATA[amount of slack in the loop. Units of measure are whatever the fiber_cable.length_units references.]]></comment>
	</column>
	<column name="slack_loop_position_along_cable">
		<type name="real" length="0"/>
		<comment><![CDATA[footage or meterage (decided by the fiber_cable.length_units on the related fiber_cable) of where the slack loop is along the cable. Where the slack loop "starts" when going down the cable in ascending measurement numbers.]]></comment>
	</column>
	<column name="latlong">
		<type name="geography" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<constraint name="fiber_cable_slack_loop_pk" type="pk-constr" table="public.fiber_cable_slack_loop">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter_types" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="620" y="140"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT">
		<type name="smallint" length="0"/>
	</column>
	<column name="type_label" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="symmetric_outputs" not-null="true" default-value="true">
		<type name="bool" length="0"/>
		<comment><![CDATA[Whether this splitter has a (theoretical - not the factory test numbers) even output power for the outputs.]]></comment>
	</column>
	<constraint name="optical_splitter_types_pk" type="pk-constr" table="public.optical_splitter_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•type_label•symmetric_outputs⸣
1•PLC•true⸣
2•FBT, symmetric•true⸣
3•FBT, asymmetric•false]]>
	</initial-data>
</table>

<table name="optical_splitter_styles" layer="0" collapse-mode="1" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="660" y="340"/>
	<column name="id" not-null="true"
	 identity-type="BY DEFAULT">
		<type name="smallint" length="0"/>
	</column>
	<column name="style_label" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="optical_splitter_styles_pk" type="pk-constr" table="public.optical_splitter_styles">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<initial-data>
<![CDATA[id•style_label⸣
1•steel tube⸣
2•ABS case⸣
3•LGX box⸣
4•Rack mount box]]>
	</initial-data>
</table>

<table name="optical_splitter_output" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="720" y="520"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="power_drop" default-value="NULL">
		<type name="real" length="0"/>
		<comment><![CDATA[NULL for theoretically symmetric output (calulate drop from the related  optical_splitter.outputs_count). Used for uneven input/output splits. Note that this is the theoretical drop that you would get modeling (for multi in x multi out splitters) the splitter as 2 back to back single input splitters with inputs tied together).]]></comment>
	</column>
	<column name="output_label">
		<type name="text" length="0"/>
	</column>
	<column name="optical_splitter_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="optical_splitter_output_pk" type="pk-constr" table="public.optical_splitter_output">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_splitter_input" layer="0" collapse-mode="1" max-obj-count="6">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="720" y="760"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="power_drop" default-value="NULL">
		<type name="real" length="0"/>
		<comment><![CDATA[NULL for theoretically symmetric input (calulate drop from the related  optical_splitter.inputs_count). Used for uneven input/output splits. Note that this is the theoretical drop that you would get modeling (for multi in x multi out splitters) the splitter as 2 back to back single input splitters with inputs tied together).]]></comment>
	</column>
	<column name="input_label">
		<type name="text" length="0"/>
	</column>
	<column name="optical_splitter_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="optical_splitter_input_pk" type="pk-constr" table="public.optical_splitter_input">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="optical_connector" layer="0" collapse-mode="1" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1720" y="140"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="optical_connector_type_id" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<constraint name="optical_connector_pk" type="pk-constr" table="public.optical_connector">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_end?" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1160" y="140"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="optical_connector_id">
		<type name="integer" length="0"/>
		<comment><![CDATA[Only set if the end of the fiber came from the factory with an optical connector. Bare fiber doesn't count - pigtails spliced on are a (short) separate cable with a splice]]></comment>
	</column>
	<column name="has_connector" default-value="false">
		<type name="bool" length="0"/>
		<comment><![CDATA[does the end of this fiber have a factory installed connector?]]></comment>
	</column>
	<constraint name="fiber_end?_pk" type="pk-constr" table="public.&quot;fiber_end?&quot;">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="cable_fiber_end?" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1780" y="340"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="start_end">
		<type name="bool" length="0"/>
		<comment><![CDATA[true=belongs to fiber.cable_start_footage end, false=belongs to fiber.cable_end_footage_end]]></comment>
	</column>
	<column name="fiber_end_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="cable_fiber_end?_pk" type="pk-constr" table="public.&quot;cable_fiber_end?&quot;">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="utility_pole" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1180" y="1360"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="pole_owner">
		<type name="text" length="0"/>
	</column>
	<column name="pole_owner_primary_label">
		<type name="text" length="0"/>
	</column>
	<column name="location">
		<type name="geography" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<constraint name="utility_pole_id_pk" type="pk-constr" table="public.utility_pole">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_connection" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1440" y="0"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_a_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_b_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_end_cant_splice_to_itself" type="ck-constr" table="public.fiber_connection">
			<expression><![CDATA[fiber_end_a_id <> fiber_end_b_id]]></expression>
	</constraint>
	<constraint name="fiber_connection_pk" type="pk-constr" table="public.fiber_connection">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<view name="v_fiber_connection_sym" layer="0" collapse-mode="2" max-obj-count="1">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[View to show fiber connections in a way that it doesn't matter what order you put the fibers in.]]></comment>
	<position x="1160" y="20"/>
	<reference>
		<expression><![CDATA[select fiber_connection.id, fiber_connection.fiber_end_a_id, fiber_connection.fiber_end_b_id from fiber_connection
union all
select fiber_connection.id, fiber_connection.fiber_end_b_id, fiber_connection.fiber_end_a_id from fiber_connection]]></expression>
	<column name="id">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_a_id">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_end_b_id">
		<type name="integer" length="0"/>
	</column>
		<reftable name="public.fiber_connection"/>
	</reference>
</view>

<relationship name="rel_v_fiber_splice_sym_fiber_splice" type="reltv" layer="0"
	 src-table="public.v_fiber_connection_sym"
	 dst-table="public.fiber_connection"
	 src-required="false" dst-required="false"/>

<table name="fiber_splice" layer="0" collapse-mode="1" max-obj-count="4">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2040" y="0"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_connection_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fusion" default-value="true">
		<type name="bool" length="0"/>
	</column>
	<column name="estimated_loss" default-value="0.3">
		<type name="real" length="0"/>
	</column>
	<constraint name="fiber_splice_pk" type="pk-constr" table="public.fiber_splice">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="underground_vault" layer="0" collapse-mode="1" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1820" y="1320"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="latlong" not-null="true">
		<type name="geography" length="0" spatial-type="POINT" variation="0" srid="4326"/>
	</column>
	<column name="depth">
		<type name="real" length="0"/>
	</column>
	<column name="width">
		<type name="real" length="0"/>
	</column>
	<column name="length">
		<type name="real" length="0"/>
	</column>
	<column name="length_units_id">
		<type name="smallint" length="0"/>
	</column>
	<column name="manufacturer_name">
		<type name="text" length="0"/>
	</column>
	<column name="vault_model">
		<type name="text" length="0"/>
	</column>
	<constraint name="underground_vault_pk" type="pk-constr" table="public.underground_vault">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="underground_conduit" layer="0" collapse-mode="1" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2360" y="1340"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="diameter">
		<type name="real" length="0"/>
	</column>
	<column name="diameter_units">
		<type name="smallint" length="0"/>
	</column>
	<column name="length_units">
		<type name="smallint" length="0"/>
	</column>
	<column name="length">
		<type name="real" length="0"/>
	</column>
	<column name="start_underground_vault_entry_id">
		<type name="integer" length="0"/>
	</column>
	<column name="end_underground_vault_entry_id">
		<type name="integer" length="0"/>
	</column>
	<column name="conduit_route">
		<type name="geography" length="0" spatial-type="LINESTRING" variation="3" srid="4326"/>
	</column>
	<constraint name="underground_conduit_pk" type="pk-constr" table="public.underground_conduit">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_cable_slack_loop_located_in_underground_vault" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2420" y="1120"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="underground_vault_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_cable_slack_loop_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_cable_slack_loop_located_in_underground_vault_pk" type="pk-constr" table="public.fiber_cable_slack_loop_located_in_underground_vault">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="fiber_enclosure_located_in_underground_vault" layer="0" collapse-mode="1" max-obj-count="3">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1420" y="1000"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="fiber_enclosure_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="underground_vault_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="fiber_enclosure_located_in_underground_vault_pk" type="pk-constr" table="public.fiber_enclosure_located_in_underground_vault">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<constraint name="pole_reference" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.utility_pole" table="public.pole_attachment">
	<columns names="attached_pole" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_pole_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.pole_attachment" table="public.strand_attachment">
	<columns names="pole_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_strand_line" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_line" table="public.strand_attachment">
	<columns names="strand_line_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_strand_to_strand" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_to_strand_attachment" table="public.strand_attachment">
	<columns names="strand_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_attached_to_strandline" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.strand_line" table="public.strand_to_strand_attachment">
	<columns names="attached_to_strand" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_pole_attachment" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.pole_attachment" table="public.strand_guy_wire">
	<columns names="pole_attachment_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitters_are_one_of_standard_types" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_types" table="public.optical_splitter">
	<columns names="splitter_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitters_are_one_of_a_standard_style" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter_styles" table="public.optical_splitter">
	<columns names="splitter_style_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="splitter_can_be_located_inside_fiber_enclosure" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure" table="public.optical_splitter">
	<columns names="containing_fiber_enclosure" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_fiber_enclosure" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure" table="public.enclosure_port">
	<columns names="fiber_enclosure_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_inside_connector_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.enclosure_port">
	<columns names="inside_port_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_outside_connector_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.enclosure_port">
	<columns names="outside_port_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ref_fiber_enclosure_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure" table="public.enclosure_cable_entry">
	<columns names="fiber_enclosure_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="enclosure_cable_entry_cable_id_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.enclosure_cable_entry">
	<columns names="cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_has_one_length_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.fiber_cable">
	<columns names="length_units" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_group_has_one_fiber_group_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_group_types" table="public.fiber_group">
	<columns names="group_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_group_belongs_to_fiber_cable" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.fiber_group">
	<columns names="fiber_cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fibers_are_in_a_cable" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.fiber">
	<columns names="cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_has_potentially_multiple_group_identifiers" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber" table="public.fiber_identifier_index">
	<columns names="fiber_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="index_level_refers_to_cable_structure_level" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_group" table="public.fiber_identifier_index">
	<columns names="group_level" ref-type="src-columns"/>
	<columns names="level" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_cable_can_have_many_slack_loops" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable" table="public.fiber_cable_slack_loop">
	<columns names="fiber_cable_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_outputs_belong_to_a_splitter" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter" table="public.optical_splitter_output">
	<columns names="optical_splitter_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_outputs_are_a_fiber" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;fiber_end?&quot;" table="public.optical_splitter_output">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_inputs_belong_to_a_splitter" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_splitter" table="public.optical_splitter_input">
	<columns names="optical_splitter_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_splitter_inputs_are_a_fiber" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;fiber_end?&quot;" table="public.optical_splitter_input">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="optical_connectors_are_a_standard_type" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector_types" table="public.optical_connector">
	<columns names="optical_connector_type_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_end_can_have_optical_connector" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.optical_connector" table="public.&quot;fiber_end?&quot;">
	<columns names="optical_connector_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="cable_fiber_end_is_attritube_of_cable_fiber" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber" table="public.&quot;cable_fiber_end?&quot;">
	<columns names="fiber_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="cable_fiber_end_inherts_from_fiber_end" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;fiber_end?&quot;" table="public.&quot;cable_fiber_end?&quot;">
	<columns names="fiber_end_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="splice_requires_fiber_a" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;fiber_end?&quot;" table="public.fiber_connection">
	<columns names="fiber_end_a_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="splice_requires_fiber_b" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.&quot;fiber_end?&quot;" table="public.fiber_connection">
	<columns names="fiber_end_b_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="fiber_splice_is_a_fiber_connection" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_connection" table="public.fiber_splice">
	<columns names="fiber_connection_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="demensions_measurements_must_have_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.underground_vault">
	<columns names="length_units_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="length_has_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.underground_conduit">
	<columns names="length_units" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="diameter_has_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.length_units" table="public.underground_conduit">
	<columns names="diameter_units" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="underground_conduit_may_start_at_underground_vault" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.underground_vault" table="public.underground_conduit">
	<columns names="start_underground_vault_entry_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="underground_conduit_may_end_at_underground_vault" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.underground_vault" table="public.underground_conduit">
	<columns names="end_underground_vault_entry_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="m2m_fiber_cable_slack_loop_underground_vault" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.underground_vault" table="public.fiber_cable_slack_loop_located_in_underground_vault">
	<columns names="underground_vault_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="m2m_underground_vault_fiber_cable_slack_loop" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_cable_slack_loop" table="public.fiber_cable_slack_loop_located_in_underground_vault">
	<columns names="fiber_cable_slack_loop_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="m2m_fiber_enclosure_underground_vault" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.fiber_enclosure" table="public.fiber_enclosure_located_in_underground_vault">
	<columns names="fiber_enclosure_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="m2m_underground_vault_fiber_enclosure" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.underground_vault" table="public.fiber_enclosure_located_in_underground_vault">
	<columns names="underground_vault_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_pole_attachment_utility_pole" type="relfk" layer="0"
	 src-table="public.pole_attachment"
	 dst-table="public.utility_pole" reference-fk="pole_reference"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_attachment_pole_attachment" type="relfk" layer="0"
	 src-table="public.strand_attachment"
	 dst-table="public.pole_attachment" reference-fk="ref_pole_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_attachment_strand_line" type="relfk" layer="0"
	 src-table="public.strand_attachment"
	 dst-table="public.strand_line" reference-fk="ref_strand_line"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_to_strand_attachment_strand_line" type="relfk" layer="0"
	 src-table="public.strand_to_strand_attachment"
	 dst-table="public.strand_line" reference-fk="ref_attached_to_strandline"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_attachment_strand_to_strand_attachment" type="relfk" layer="0"
	 src-table="public.strand_attachment"
	 dst-table="public.strand_to_strand_attachment" reference-fk="ref_strand_to_strand"
	 src-required="false" dst-required="false"/>

<relationship name="rel_strand_guy_wire_pole_attachment" type="relfk" layer="0"
	 src-table="public.strand_guy_wire"
	 dst-table="public.pole_attachment" reference-fk="ref_pole_attachment"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_port_fiber_enclosure" type="relfk" layer="0"
	 src-table="public.enclosure_port"
	 dst-table="public.fiber_enclosure" reference-fk="ref_fiber_enclosure"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_port_optical_connector_types" type="relfk" layer="0"
	 src-table="public.enclosure_port"
	 dst-table="public.optical_connector_types" reference-fk="ref_inside_connector_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_port_optical_connector_types1" type="relfk" layer="0"
	 src-table="public.enclosure_port"
	 dst-table="public.optical_connector_types" reference-fk="ref_outside_connector_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_cable_entry_fiber_enclosure" type="relfk" layer="0"
	 src-table="public.enclosure_cable_entry"
	 dst-table="public.fiber_enclosure" reference-fk="ref_fiber_enclosure_id"
	 src-required="false" dst-required="false"/>

<relationship name="rel_enclosure_cable_entry_fiber_cable" type="relfk" layer="0"
	 src-table="public.enclosure_cable_entry"
	 dst-table="public.fiber_cable" reference-fk="enclosure_cable_entry_cable_id_fk"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_group_fiber_group_types" type="relfk" layer="0"
	 src-table="public.fiber_group"
	 dst-table="public.fiber_group_types" reference-fk="fiber_group_has_one_fiber_group_type"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_length_units" type="relfk" layer="0"
	 src-table="public.fiber_cable"
	 dst-table="public.length_units" reference-fk="fiber_cable_has_one_length_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_group_fiber_cable" type="relfk" layer="0"
	 src-table="public.fiber_group"
	 dst-table="public.fiber_cable" reference-fk="fiber_group_belongs_to_fiber_cable"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_fiber_cable" type="relfk" layer="0"
	 src-table="public.fiber"
	 dst-table="public.fiber_cable" reference-fk="fibers_are_in_a_cable"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_identifier_index_fiber" type="relfk" layer="0"
	 src-table="public.fiber_identifier_index"
	 dst-table="public.fiber" reference-fk="fiber_has_potentially_multiple_group_identifiers"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_slack_loop_fiber_cable" type="relfk" layer="0"
	 src-table="public.fiber_cable_slack_loop"
	 dst-table="public.fiber_cable" reference-fk="fiber_cable_can_have_many_slack_loops"
	 src-required="false" dst-required="false">
	<label ref-type="dst-label">
		<position x="-8.63278" y="-4.075"/>
	</label>
</relationship>

<relationship name="rel_optical_splitter_optical_splitter_types" type="relfk" layer="0"
	 src-table="public.optical_splitter"
	 dst-table="public.optical_splitter_types" reference-fk="optical_splitters_are_one_of_standard_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_optical_splitter_styles" type="relfk" layer="0"
	 src-table="public.optical_splitter"
	 dst-table="public.optical_splitter_styles" reference-fk="optical_splitters_are_one_of_a_standard_style"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_output_optical_splitter" type="relfk" layer="0"
	 src-table="public.optical_splitter_output"
	 dst-table="public.optical_splitter" reference-fk="optical_splitter_outputs_belong_to_a_splitter"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_output_cp_optical_splitter" type="relfk" layer="0"
	 src-table="public.optical_splitter_input"
	 dst-table="public.optical_splitter" reference-fk="optical_splitter_inputs_belong_to_a_splitter"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_splitter_fiber_enclosure" type="relfk" layer="0"
	 src-table="public.optical_splitter"
	 dst-table="public.fiber_enclosure" reference-fk="splitter_can_be_located_inside_fiber_enclosure"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_identifier_index_fiber_group" type="relfk" layer="0"
	 src-table="public.fiber_identifier_index"
	 dst-table="public.fiber_group" reference-fk="index_level_refers_to_cable_structure_level"
	 src-required="false" dst-required="false"/>

<relationship name="rel_optical_connector_optical_connector_types" type="relfk" layer="0"
	 src-table="public.optical_connector"
	 dst-table="public.optical_connector_types" reference-fk="optical_connectors_are_a_standard_type"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_fiber_end?_optical_connector&quot;" type="relfk" layer="0"
	 src-table="public.&quot;fiber_end?&quot;"
	 dst-table="public.optical_connector" reference-fk="fiber_end_can_have_optical_connector"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_cable_fiber_end?_fiber&quot;" type="relfk" layer="0"
	 src-table="public.&quot;cable_fiber_end?&quot;"
	 dst-table="public.fiber" reference-fk="cable_fiber_end_is_attritube_of_cable_fiber"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_cable_fiber_end?_fiber_end?&quot;" type="relfk" layer="0"
	 src-table="public.&quot;cable_fiber_end?&quot;"
	 dst-table="public.&quot;fiber_end?&quot;" reference-fk="cable_fiber_end_inherts_from_fiber_end"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_optical_splitter_output_fiber_end?&quot;" type="relfk" layer="0"
	 src-table="public.optical_splitter_output"
	 dst-table="public.&quot;fiber_end?&quot;" reference-fk="optical_splitter_outputs_are_a_fiber"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_optical_splitter_input_fiber_end?&quot;" type="relfk" layer="0"
	 src-table="public.optical_splitter_input"
	 dst-table="public.&quot;fiber_end?&quot;" reference-fk="optical_splitter_inputs_are_a_fiber"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_fiber_splice_fiber_end?&quot;" type="relfk" layer="0"
	 src-table="public.fiber_connection"
	 dst-table="public.&quot;fiber_end?&quot;" reference-fk="splice_requires_fiber_a"
	 src-required="false" dst-required="false"/>

<relationship name="&quot;rel_fiber_splice_fiber_end?1&quot;" type="relfk" layer="0"
	 src-table="public.fiber_connection"
	 dst-table="public.&quot;fiber_end?&quot;" reference-fk="splice_requires_fiber_b"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_splice_fiber_connection" type="relfk" layer="0"
	 src-table="public.fiber_splice"
	 dst-table="public.fiber_connection" reference-fk="fiber_splice_is_a_fiber_connection"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_vault_length_units" type="relfk" layer="0"
	 src-table="public.underground_vault"
	 dst-table="public.length_units" reference-fk="demensions_measurements_must_have_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_conduit_length_units" type="relfk" layer="0"
	 src-table="public.underground_conduit"
	 dst-table="public.length_units" reference-fk="length_has_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_conduit_length_units1" type="relfk" layer="0"
	 src-table="public.underground_conduit"
	 dst-table="public.length_units" reference-fk="diameter_has_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_conduit_underground_vault" type="relfk" layer="0"
	 src-table="public.underground_conduit"
	 dst-table="public.underground_vault" reference-fk="underground_conduit_may_start_at_underground_vault"
	 src-required="false" dst-required="false"/>

<relationship name="rel_underground_conduit_underground_vault1" type="relfk" layer="0"
	 src-table="public.underground_conduit"
	 dst-table="public.underground_vault" reference-fk="underground_conduit_may_end_at_underground_vault"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_slack_loop_located_in_underground_vault_undergr" type="relfk" layer="0"
	 src-table="public.fiber_cable_slack_loop_located_in_underground_vault"
	 dst-table="public.underground_vault" reference-fk="m2m_fiber_cable_slack_loop_underground_vault"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_cable_slack_loop_located_in_underground_vault_fiber_c" type="relfk" layer="0"
	 src-table="public.fiber_cable_slack_loop_located_in_underground_vault"
	 dst-table="public.fiber_cable_slack_loop" reference-fk="m2m_underground_vault_fiber_cable_slack_loop"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_enclosure_located_in_underground_vault_fiber_enclosur" type="relfk" layer="0"
	 src-table="public.fiber_enclosure_located_in_underground_vault"
	 dst-table="public.fiber_enclosure" reference-fk="m2m_fiber_enclosure_underground_vault"
	 src-required="false" dst-required="false"/>

<relationship name="rel_fiber_enclosure_located_in_underground_vault_underground_va" type="relfk" layer="0"
	 src-table="public.fiber_enclosure_located_in_underground_vault"
	 dst-table="public.underground_vault" reference-fk="m2m_underground_vault_fiber_enclosure"
	 src-required="false" dst-required="false"/>

</dbmodel>
